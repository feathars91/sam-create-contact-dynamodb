AWSTemplateFormatVersion: 2010-09-09
Description: Serverless DynamoDB CRUD
Transform: AWS::Serverless-2016-10-31
Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: MyLambdaTokenAuthorizer
        Authorizers:
          MyLambdaTokenAuthorizer:
            FunctionArn:
              Fn::GetAtt:
              - MyAuthFunction
              - Arn
  MyAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MyAuthFunction
      Handler: handler.authorizer
      Runtime: nodejs14.x
    Metadata:
      SamResourceId: MyAuthFunction
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-all-items.getAllItemsHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: HTTP get method to get all Contacts from a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyApi
            Path: /contacts/list
            Method: GET
      CodeUri: getAllItemsFunction
    Metadata:
      SamResourceId: getAllItemsFunction
  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-by-id.getByIdHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: HTTP get method to get one Contact by id from a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyApi
            Path: /contacts/{contactId}
            Method: GET
      CodeUri: getByIdFunction
    Metadata:
      SamResourceId: getByIdFunction
  blockFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/block-item.blockHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: HTTP get method to block a contact.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyApi
            Path: /contacts/{contactId}/block
            Method: GET
      CodeUri: blockFunction
    Metadata:
      SamResourceId: blockFunction
  importFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/import-item.importHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: HTTP get method to Import a contact.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyApi
            Path: /contacts/import
            Method: GET
      CodeUri: importFunction
    Metadata:
      SamResourceId: importFunction
  inviteFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/invite-item.inviteHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: HTTP get method to Invite a contact.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyApi
            Path: /contacts/{contactId}/invite
            Method: GET
      CodeUri: inviteFunction
    Metadata:
      SamResourceId: inviteFunction
  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/put-item.putItemHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: HTTP post method to add one item to a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyApi
            Path: /contacts
            Method: POST
      CodeUri: putItemFunction
    Metadata:
      SamResourceId: putItemFunction
  updateItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/update-item.updateItemHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: HTTP post method to update one item to a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyApi
            Path: /contacts/{contactId}/
            Method: PUT
      CodeUri: updateItemFunction
    Metadata:
      SamResourceId: updateItemFunction
  deleteItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/delete-item.deleteItemHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: HTTP post method to delete one item to a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyApi
            Path: /contacts/{contactId}/
            Method: DELETE
      CodeUri: deleteItemFunction
    Metadata:
      SamResourceId: deleteItemFunction
  SampleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      Fn::Sub: https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
  ApiId:
    Description: API ID
    Value:
      Ref: MyApi
